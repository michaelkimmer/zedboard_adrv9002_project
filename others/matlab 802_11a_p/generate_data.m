
function [data, LENGTH] = generate_data(LENGTH)
    % LENGTH -- in octects
   
    % Choose: Valid MAC frame or Random data
    if isnan(LENGTH)
        % Valid MAC frame (the first 72 characters of the well-known “Ode to Joy”)
        % https://pdos.csail.mit.edu/archive/decouto/papers/802.11a.pdf
        msg_hex = [0x04, 0x02, 0x00, 0x2e, 0x00, 0x60, 0x08, 0xcd, 0x37, 0xa6, 0x00, 0x20, 0xd6, 0x01, 0x3c, 0xf1, 0x00, 0x60, 0x08, 0xad, 0x3b, 0xaf, 0x00, 0x00, 0x4a, 0x6f, 0x79, 0x2c, 0x20, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x6f, 0x66, 0x20, 0x64, 0x69, 0x76, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x2c, 0x0a, 0x44, 0x61, 0x75, 0x67, 0x68, 0x74, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x45, 0x6c, 0x79, 0x73, 0x69, 0x75, 0x6d, 0x2c, 0x0a, 0x46, 0x69, 0x72, 0x65, 0x2d, 0x69, 0x6e, 0x73, 0x69, 0x72, 0x65, 0x64, 0x20, 0x77, 0x65, 0x20, 0x74, 0x72, 0x65, 0x61, 0xda, 0x57, 0x99, 0xed];
        msg_bin = [];
        for i=1:length(msg_hex)
            byte_msb = int2bit(msg_hex(i), 8).';
            byte_lsb = fliplr(byte_msb); % Add each byte LSB !!
            msg_bin = [msg_bin, byte_lsb];
        end

        LENGTH = length(msg_hex);
        data = double(msg_bin);
    else
        % Check input
        assert((LENGTH >= 1) & (LENGTH <= 4095), "LENGTH not valid"); % 1..4095

        % Generate random data
        data = randi(2, [1, 8*LENGTH]) - 1;
    end

end